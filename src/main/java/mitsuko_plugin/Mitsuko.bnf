{
  parserClass="mitsuko_plugin.parser.MitsukoParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Mitsuko"
  psiImplClassSuffix="Impl"
  psiPackage="mitsuko_plugin.psi"
  psiImplPackage="mitsuko_plugin.psi.impl"

  elementTypeHolderClass="mitsuko_plugin.psi.MitsukoTypes"
  elementTypeClass="mitsuko_plugin.psi.MitsukoElementType"
  tokenTypeClass="mitsuko_plugin.psi.MitsukoTokenType"
}

mitsukoFile ::= (FUNCTION_FILE | PACK_FILE | ITEM_FILE)?


PACK_FILE ::= HEADER_PACK_FILE (PACK_TAG | CRLF)+

PACK_TAG ::= TAG_NAME EQUALS TAG_VALUE


ITEM_FILE ::= HEADER_ITEM_FILE ((ITEM_GROUP BLOCK_OPEN ITEM_CONTENT BLOCK_CLOSE) | (ITEM_GROUP EQUALS TAG_VALUE) | CRLF)+

ITEM_CONTENT ::= (NBT_STRING | (TAG_NAME EQUALS TAG_VALUE) | (CODE | MSK_COMMENT | CRLF))+



FUNCTION_FILE ::= HEADER_FN_FILE (AT_LABEL|MSK_COMMENT|CRLF|FUNCTION)+

FUNCTION ::= FN_DEFINE FN_OPEN LINES FN_CLOSE

LINES ::= ((CODE+ CRLF?) | MSK_COMMENT | CRLF)*

private CODE ::= (BLOCK |
        MULTILINE |
        (FN_CALL ((NBT FN_CALL) | (SUB_CUSTOM+))?) |
        ONELINE|
        (NOLEX SUB_UNKNOWN))+ CRLF
        
ONELINE ::= (CODE_CUSTOM | COMMAND_START | SHORT_SCORE | VALUE)
            (VALUE | EQUALS | (E_SELECTOR !EQUALS) | 
            SUB_CUSTOM | PIDENT | EXE_SUB | SUB_1 | SUB_2 | SUB_UNKNOWN | NBT)*


MULTILINE ::= (FLOW | FOR | (CODE_CUSTOM PIDENT))

FOR ::= CODE_CUSTOM PARENS SCOREBOARD COMMA (PIDENT | VALUE | SCOREBOARD) (COMMA (PIDENT | VALUE | SCOREBOARD))? PARENS

FLOW ::= FLOW_CONTROL PARENS (CONDITION)+ PARENS

private BLOCK ::= BLOCK_OPEN LINES BLOCK_CLOSE

CONDITION ::= (SUB_1 | SUB_2 | SUB_UNKNOWN | SCOREBOARD | (E_SELECTOR !EQUALS) | SCORE_OPERATION | PIDENT | NBT | VALUE)+

AT_LABEL ::= (FN_KEYWORD CRLF) | (FN_KEYWORD SUB_1 SUB_CUSTOM*)

FN_DEFINE ::= (FN_KEYWORD FN_NAME) 

NBT ::= (NBT_BRACES NBT_INTERNAL*) | (NBT_STRING+)

NBT_INTERNAL ::= (NBT_PROPERTY | (EQUALS NBT_INTERNAL) | COMMA | NBT_VALUE | NBT_STRING | CODE_CUSTOM | NBT_BRACES | VALUE)

E_SELECTOR ::= SELECTOR NBT?

SCOREBOARD_NO_TEMP ::= (E_SELECTOR EQUALS SCORE_NAME) | VALUE

SCOREBOARD ::= SCOREBOARD_NO_TEMP | SCOREBOARD_TEMP

SHORT_SCORE ::= (SCOREBOARD SCORE_OPERATION ((SCOREBOARD !(SCORE_OPERATION)) | PIDENT | ONELINE)?) | SCOREBOARD


